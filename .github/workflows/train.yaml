name: mlops-two-testing-pipeline
on: [push]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # This is important for DVC to access git history
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      
      - name: Update requirements.txt
        run: |
          # Update sklearn to scikit-learn in requirements.txt
          sed -i 's/sklearn/scikit-learn/g' requirements.txt
          cat requirements.txt
      
      - name: Install DVC and dependencies
        run: |
          pip install -r requirements.txt
          pip install dvc
      
      - name: 'Setup CML'
        uses: iterative/setup-cml@v1
      
      - name: 'Train and evaluate model'
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Run your DVC pipeline
          dvc repro
          
          # Generate metrics comparison
          dvc metrics diff --show-md main > report.md || echo "## Model Metrics" > report.md
          
          # If dvc metrics diff fails, use metrics.json directly
          if [ ! -s report.md ]; then
            echo "## Model Metrics" > report.md
            echo '```json' >> report.md
            cat metrics.json >> report.md
            echo '```' >> report.md
          fi
          
          # Add figure to report
          echo -e "\n## ROC Graph for the model" >> report.md
          echo "![](./ROC.png)" >> report.md
          
          # Use updated CML command
          cml comment create report.md
